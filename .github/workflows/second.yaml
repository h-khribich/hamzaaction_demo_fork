name: Le premier

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
      
jobs:
  Hello:
    runs-on: ubuntu-latest

    steps:
      - run: env | sort

  TestBack:    
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      mariadb:
        image: mariadb:latest
        env:
          MARIADB_ROOT_PASSWORD: toor
          MARIADB_DATABASE: test
          MARIADB_USER: test
          MARIADB_PASSWORD: test
        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3                 

    env:
      BDD_HOST: 127.0.0.1
      BDD_NAME: test
      BDD_USER: test
      BDD_PASS: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Database Cnx Check
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -u root -ptoor -e "SHOW DATABASES"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm i

      - name: Init BDD
        run: npm run initbdd

      - name: Populate Bdd
        run: mysql -u root -ptoor --host 127.0.0.1 --port 3306 --database test < ./test/insert_test_user.sql

      - name: Run test and coverage
        run: npm run test:cov

      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage
          retention-days: 1
    
  TestFront:
    needs: [TestBack]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Start Back Build
        run: |
          cd ..
          docker compose -f docker-back-build.yml up -d
          docker ps -a

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: test Backend Container
        if: success()
        run: curl http://127.0.0.1:12000

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Cypress E2E Install
        uses: cypress-io/github-action@v6
        with:
          runTests: false
          working-directory: frontend

      - name: Install dependencies
        run: npm i

      - name: Start E2E Test
        uses: cypress-io/github-action@v6
        with: 
          install: false
          working-directory: frontend
          start: npm run dev

      - name: Generate Coverage
        run: npm run cypress:cov

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots
          retention-days: 1

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: frontend/cypress/videos
          retention-days: 1

      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage-report
          path: frontend/coverage
          retention-days: 1

      - name: Clean Builder Backend Docker
        if: always()        
        run: |
          cd ..
          docker compose -f docker-back-build.yaml down

  Deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo SUR SERVEUR



